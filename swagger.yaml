openapi: 3.0.0
info:
  title: Verify Emails
  description: |
    # Verificaremails ®

    **Verify Emails ®** allows you to securely conduct email marketing campaigns
    by ensuring the deliverability of all your emails by validating them before sending,
    without the email owner receiving any mail or notification.

    You can verify email addresses on your website or application with our API, through our web application,
    with integrations via Zapier or our Widget. All in real-time.

    ## Individual and Bulk Email Verifications

    Verify a single email or long lists of contacts. Our API and web application can verify
    thousands of contacts in a single call!





    # Results Guide

    *Verify Emails ®* first identifies disposable emails, spam-traps, and
    complaint emails and then launches the validation process.

    After your files have been verified, each email on the list will be labeled
    with one of the following statuses. Remember that these statuses are what you can see in the "Result" column:

    | Status           | Description                                                                                                            |
    |------------------|------------------------------------------------------------------------------------------------------------------------|
    | ok               | Everything is OK. The address is correct and ready to receive emails                                                   |
    | error            | The server indicates that delivery has failed, but there is no information about the email                             |
    | smtp_error       | The SMTP has responded from the server as invalid or the destination server has reported an internal error             |
    | smtp_protocol    | The destination server has allowed the connection but the SMTP has closed the session before verifying the email       |
    | unknown_email    | The server has responded that message delivery has failed and that the email address does not exist                    |
    | attempt_rejected | Delivery has failed; the reason is similar to "rejected"                                                               |
    | relay_error      | Delivery has failed as there was a failure in the relay                                                                |
    | antispam_system  | Some type of anti-spam filter is blocking the verification process                                                     |
    | email_disabled   | The email account is suspended, disabled, or limited, unable to receive mail                                           |
    | domain_error     | There is no mail server for this domain. No mail can be delivered                                                      |
    | ok_for_all       | The mail server responds that it can accept any email address associated with the domain                               |
    | dead_server      | The mail server is dead and no connection can be established                                                           |
    | syntax_error     | There is a syntactic error in the email address                                                                        |
    | unknown          | Mail delivery has failed but no reason has been given                                                                  |
    | accept_all       | The server is configured to accept any mail. The domain accepts any associated mail                                    |
    | disposable       | The mail server is configured to accept emails only for a certain period of time                                       |
    | spam_traps       | The email address is maintained by an ISP, which does not select or open emails                                        |




      # Autenticación API
      To use our API you need credentials. You can get your API key by visiting the **API** section in your dashboard.

    <!-- ReDoc-Inject: <security-definitions> -->

  termsOfService: http://verificaremails.com/terms.html
  contact:
    name: Support
    url: https://www.verificaremails.com/#FAQ
    email: contactar@verificaremails.com
  version: "1.0.0"

servers:
  - url: https://dashboard.verificaremails.com/myapi

tags:
  - name: Email Validation API
    description: |
      **Verificar Emails** provides a developer API to integrate
      the email verification process with your service.

      Our API provides the ability to check individual email addresses
      and can accept an email list through file upload.
x-tagGroups:
  - name: Developer API
    tags:
      - Email Validation API

paths:
  /email/validate/single:
    get:
      security:
        - APIKey: []
      tags:
        - Email Validation API
      summary: /email/validate/single
      description: |
        Submits an email address for verification.
        
        The response will be returned in the form of a plain text string:
        | Response           | Description                                                                |
        |--------------------|----------------------------------------------------------------------------|
        | ok                 | The supplied email address has passed all verification tests               |
        | fail               | The supplied email address has failed one or more tests                    |
        | unknown            | The supplied email address can not be accurately tested                    |
        | incorrect          | No email address was provided in the request or it contains a syntax error |
        | key_not_valid      | No api key was provided in the request or it was invalid                   |
        | missing parameters | There are no validations remaining to complete this attempt                |
        
        When the response is `fail` it can be for one of the following reasons:
        | Reason                                                                                           |
        |--------------------------------------------------------------------------------------------------|
        | The address provided does not exist                                                              |
        | The mailbox is full                                                                              |
        | The address provided is a disposable email address                                               |
        | The address provided is not in a valid format                                                    |
        | The address provided is a role account                                                           |
        | The address provided does not have a valid dns                                                   |
        | The address provided does not have a mx server                                                   |
        | The address provided was found in your internal blacklist containing previously failed addresses |
        | The domain provided was found in your domain blacklist                                           |
      operationId: d587e44e9cd0459714670331256ceaf9
      parameters:
        - name: auth-token
          in: query
          description: API auth token
          required: true
          schema:
            type: string
        - name: term
          in: query
          description: Email address to test.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success result
          content:
            application/json:
              schema:
                description: JSON result
                required:
                  - id
                  - term
                  - request_id
                  - result_code
                  - result_type
                properties:
                  id:
                    type: string
                    example: '364637'
                  term:
                    type: string
                    example: antxon.pous@verificaremails.com
                  request_id:
                    type: string
                    example: '364637'
                  result_code:
                    type: string
                    example: '114'
                  result_type:
                    type: string
                    example: Inconclusive
                  result:
                    type: object
                    example:
                      status: ok_for_all
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '402':
          $ref: '#/components/responses/402'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      x-codeSamples:
        - lang: PHP
          source: |
            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://dashboard.verificaremails.com/myapi/email/validate/single?term=antxon.pous%40verificaremails.com&auth-token={{api_token}}',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'GET',
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;
        - lang: Python
          source: |
            import requests

            url = "https://dashboard.verificaremails.com/myapi/email/validate/single?term=antxon.pous@verificaremails.com&auth-token={{api_token}}"

            payload = {}
            headers = {}

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("https://dashboard.verificaremails.com/myapi/email/validate/single?term=antxon.pous@verificaremails.com&auth-token={{api_token}}")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)

            response = https.request(request)
            puts response.read_body
        - lang: C#
          source: |
            var client = new HttpClient();
            var request = new HttpRequestMessage(HttpMethod.Get, "https://dashboard.verificaremails.com/myapi/email/validate/single?term=antxon.pous@verificaremails.com&auth-token={{api_token}}");
            var response = await client.SendAsync(request);
            response.EnsureSuccessStatusCode();
            Console.WriteLine(await response.Content.ReadAsStringAsync());
  /email/validate/multiple:
    post:
      security:
        - APIKey: []
      tags:
        - Email Validation API
      summary: /email/validate/multiple
      description: |
        Submit a list of emails for verification. Upload a file containing your
        list of emails and it will be returned with an additional field
        that assigns each email a verification status.

        This endpoint expects the file to be in the same format as described in
        our [**File Verification**](#section/File-Verification) section.
        The updated file will have an additional field attached as described in
        our [**Result Guide**](#section/Result-Guide) section.

        The response will be returned in the form of a plain text string:
        | Response           | Description                                                                            |
        |--------------------|----------------------------------------------------------------------------------------|
        | &lt;upload-id&gt;  | A number representing the file being processed.                                        |
        | no_credit          | Your current account balance is $0.                                                    |
        | cannot_upload_file | The uploaded file could not be processed due to incorrect formatting or broken upload. |
        | key_not_valid      | No api key was provided in the request or it was invalid.                              |
        | missing parameters | There are no validations remaining to complete this attempt.                           |
        
        After receiving the `upload-id`, you can check the processing status and
        retrieve the finished results using the [**/getApiFileInfo**](#operation/getApiFileInfo) endpoint.
      operationId: 593fa14b20a2ee749a8b335c93aed646
      parameters:
        - name: auth-token
          in: query
          description: API auth token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - column
              properties:
                file:
                  description: The file to upload (xls, xlsx, cvs, or txt)
                  type: string
                  format: binary
                column:
                  description: The column number or letter
                  type: string
                send_email:
                  description: >-
                    Send an email to notify when the file is processed (1) or
                    not (0, default)
                  type: integer
                  default: 0
                  enum:
                    - 0
                    - 1
                callback_url:
                  description: URL for the callback
                  type: string
                  format: url
              type: object
      responses:
        '200':
          description: Success result.
          content:
            application/json:
              schema:
                description: Message successfully sent to the platform.
                properties:
                  request_id:
                    type: string
                    example: '368228'
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '402':
          $ref: '#/components/responses/402'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      x-codeSamples:
        - lang: PHP
          source: |
            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://dashboard.verificaremails.com/myapi/email/validate/multiple?auth-token={{api_token}}',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => array('file'=> new CURLFILE('/C:/Users/antxo/Downloads/test_email_validation.txt'),'column' => '1','send_email' => '1','callback_url' => 'https://webhook.site/7f0ec9da-6274-4b9c-98d6-2b0f4eb61ed9'),
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;
        - lang: Python
          source: |
            import requests

            url = "https://dashboard.verificaremails.com/myapi/email/validate/multiple?auth-token={{api_token}}"

            payload = {'column': '1',
            'send_email': '1',
            'callback_url': 'https://webhook.site/7f0ec9da-6274-4b9c-98d6-2b0f4eb61ed9'}
            files=[
              ('file',('test_email_validation.txt',open('/C:/Users/antxo/Downloads/test_email_validation.txt','rb'),'text/plain'))
            ]
            headers = {}

            response = requests.request("POST", url, headers=headers, data=payload, files=files)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("https://dashboard.verificaremails.com/myapi/email/validate/multiple?auth-token={{api_token}}")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Post.new(url)
            form_data = [['file', File.open('/C:/Users/antxo/Downloads/test_email_validation.txt')],['column', '1'],['send_email', '1'],['callback_url', 'https://webhook.site/7f0ec9da-6274-4b9c-98d6-2b0f4eb61ed9']]
            request.set_form form_data, 'multipart/form-data'
            response = https.request(request)
            puts response.read_body
        - lang: C#
          source: |
            var client = new HttpClient();
            var request = new HttpRequestMessage(HttpMethod.Post, "https://dashboard.verificaremails.com/myapi/email/validate/multiple?auth-token={{api_token}}");
            var content = new MultipartFormDataContent();
            content.Add(new StreamContent(File.OpenRead("/C:/Users/antxo/Downloads/test_email_validation.txt")), "file", "/C:/Users/antxo/Downloads/test_email_validation.txt");
            content.Add(new StringContent("1"), "column");
            content.Add(new StringContent("1"), "send_email");
            content.Add(new StringContent("https://webhook.site/7f0ec9da-6274-4b9c-98d6-2b0f4eb61ed9"), "callback_url");
            request.Content = content;
            var response = await client.SendAsync(request);
            response.EnsureSuccessStatusCode();
            Console.WriteLine(await response.Content.ReadAsStringAsync());
  /email/credits:
    get:
      security:
        - APIKey: []
      tags:
        - Email Validation API
      summary: /email/credits
      description: |
        Retrieve the number of available credits.
      operationId: 5bc566aa55569519c6c8580fe84b2932
      parameters:
        - name: auth-token
          in: query
          description: API auth token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success result
          content:
            application/json:
              schema:
                description: Success JSON
                properties:
                  credits:
                    type: string
                    example: '1000'
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '402':
          $ref: '#/components/responses/402'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      x-codeSamples:
        - lang: PHP
          source: |
            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://dashboard.verificaremails.com/myapi/email/credits?auth-token={{api_token}}',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'GET',
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;
        - lang: Python
          source: |
            import requests

            url = "https://dashboard.verificaremails.com/myapi/email/credits?auth-token={{api_token}}"

            payload = {}
            headers = {}

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("https://dashboard.verificaremails.com/myapi/email/credits?auth-token={{api_token}}")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)

            response = https.request(request)
            puts response.read_body
        - lang: C#
          source: |
            var client = new HttpClient();
            var request = new HttpRequestMessage(HttpMethod.Get, "https://dashboard.verificaremails.com/myapi/email/credits?auth-token={{api_token}}");
            var response = await client.SendAsync(request);
            response.EnsureSuccessStatusCode();
            Console.WriteLine(await response.Content.ReadAsStringAsync());
  /all/credits:
    get:
      security:
        - APIKey: []
      tags:
        - Email Validation API
      summary: /all/credits
      description: |
        Retrieve the number of available credits related to all APIs.
      operationId: 0b525866e73e0650eceaabb0f892dd6f
      parameters:
        - name: auth-token
          in: query
          description: API auth token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success result
          content:
            application/json:
              schema:
                description: Success JSON
                type: array
                items:
                  required:
                    - api_service
                    - credits
                    - api_service_alias
                  properties:
                    api_service:
                      type: string
                      example: email
                    credits:
                      type: string
                      example: '1000'
                    api_service_alias:
                      type: string
                      example: 'Email Verification'
                  type: object
              examples:
                example:
                  value: 
                    - api_service: phone
                      credits: '5'
                      api_service_alias: 'Phone Number Verification - HLR'
                    - api_service: email
                      credits: '6'
                      api_service_alias: 'Email Verification' 
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '402':
          $ref: '#/components/responses/402'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      x-codeSamples:
        - lang: PHP
          source: |
            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://dashboard.verificaremails.com/myapi/all/credits?auth-token={{api_token}}',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'GET',
            ));

            $response = curl_exec($curl);

            curl_close($curl);
            echo $response;
        - lang: Python
          source: |
            import requests

            url = "https://dashboard.verificaremails.com/myapi/all/credits?auth-token={{api_token}}"

            payload = {}
            headers = {}

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("https://dashboard.verificaremails.com/myapi/all/credits?auth-token={{api_token}}")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)

            response = https.request(request)
            puts response.read_body
        - lang: C#
          source: |
            var client = new HttpClient();
            var request = new HttpRequestMessage(HttpMethod.Get, "https://dashboard.verificaremails.com/myapi/all/credits?auth-token={{api_token}}");
            var response = await client.SendAsync(request);
            response.EnsureSuccessStatusCode();
            Console.WriteLine(await response.Content.ReadAsStringAsync());
components:
  securitySchemes:
    APIKey:
      type: apiKey
      name: auth-token
      in: query
  schemas:
    ErrorResponse:
      required:
        - error
      properties:
        error:
          required:
            - code
            - msg
          properties:
            code:
              description: Internal error code
              type: integer
              example: 100001
            msg:
              description: Error description
              type: string
              example: Error description
          type: object
      type: object
  responses:
    '400':
      description: Your request is structured incorrectly.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '401':
      description: You did not send an API key.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '402':
      description: You don't have enough credits to complete this request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '403':
      description: Your API key is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '404':
      description: The specified resource does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '429':
      description: You're requesting an endpoint too often.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '500':
      description: >-
        A server error occurred. Please try again later, or contact support if
        you're having trouble.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
